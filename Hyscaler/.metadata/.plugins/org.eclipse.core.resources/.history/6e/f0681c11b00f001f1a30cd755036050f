package com.hyscaler.services;

import java.util.ArrayList;
import java.util.List;

import org.json.JSONObject;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.hyscaler.model.Events;
import com.hyscaler.model.User;
import com.hyscaler.repo.IEventRepo;
import com.hyscaler.repo.IUserRepo;
import com.razorpay.Invoice;
import com.razorpay.RazorpayClient;
import com.razorpay.RazorpayException;

@Service
public class UserServiceMngmImpl implements IUserService {

	@Autowired
	private IUserRepo repo;

	@Autowired
	private IEventRepo repo1;

	@Override
	public int saveUSer(User u) {

		return repo.save(u).getId();
	}

	@Override
	public User findUSer(String email) {

		return repo.findByEmail(email);
	}

	@Override
	public Events saveEvents(Events e) {
		// TODO Auto-generated method stub
		return repo1.save(e);
	}

	@Override
	public List<Events> getAllEvents() {
		
		return repo1.findAll();
	}
	
     @Override
    public Events getEventById(int id) {
    	// TODO Auto-generated method stub
    	return repo1.getById(id);
    }
     
     @Override
    public Events updateEvent(Events e) {
    	  repo1.save(e);
    	return repo1.save(e);
    }
     
     @Override
    public void deleteEvent(int id) {
    	repo1.deleteById(id);
    	
    }
     
@Override
    public long totalEvents() {
    	
	
    	return repo1.count();
    }


     @Override
    public void getInvoice() throws Exception {
    	

 		RazorpayClient razorpay = new RazorpayClient("rzp_test_ithEqs2In4mYO7", "esMc2Ol5YYgxJCK52eN3haeY");

 		JSONObject invoiceRequest = new JSONObject();
 		invoiceRequest.put("type", "invoice");
 		invoiceRequest.put("description", "Invoice for the month of January 2020");
 		invoiceRequest.put("partial_payment",true); 
 		JSONObject customer = new JSONObject();
 		customer.put("name","Gaurav Kumar");
 		customer.put("contact","9000090000");
 		customer.put("email","gaurav.kumar@example.com");
 		JSONObject billingAddress = new JSONObject();
 		billingAddress.put("line1","Ground & 1st Floor, SJR Cyber Laskar");
 		billingAddress.put("line2","Hosur Road");
 		billingAddress.put("zipcode","560068");
 		billingAddress.put("city","Bengaluru");
 		billingAddress.put("state","Karnataka");
 		billingAddress.put("country","in");
 		customer.put("billing_address",billingAddress);
 		JSONObject shippingAddress = new JSONObject();
 		shippingAddress.put("line1","Ground & 1st Floor, SJR Cyber Laskar");
 		shippingAddress.put("line2","Hosur Road");
 		shippingAddress.put("zipcode","560068");
 		shippingAddress.put("city","Bengaluru");
 		shippingAddress.put("state","Karnataka");
 		shippingAddress.put("country","in");
 		customer.put("shipping_address",shippingAddress);
 		invoiceRequest.put("customer",customer);
 		List<Object> lines = new ArrayList<>();
 		JSONObject lineItems = new JSONObject();
 		lineItems.put("name","Master Cloud Computing in 30 Days");
 		lineItems.put("description","Book by Ravena Ravenclaw");
 		lineItems.put("amount",399);
 		lineItems.put("currency","INR");
 		lineItems.put("quantity",1);
 		lines.add(lineItems);
 		invoiceRequest.put("line_items",lines);
 		invoiceRequest.put("email_notify", 1);
 		invoiceRequest.put("sms_notify", 1);
 		invoiceRequest.put("currency","INR");
 		invoiceRequest.put("expire_by", 1580479824);

 		Invoice invoice = razorpay.invoices.create(invoiceRequest);
    	
    }

}
